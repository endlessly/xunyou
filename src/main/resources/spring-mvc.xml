<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        ">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.xunyou.action"/>

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!-- 静态资源 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <mvc:resources mapping="/html/css/**" location="/WEB-INF/static/" cache-period="31556926"/>
    <mvc:resources mapping="/html/js/**" location="/WEB-INF/lib/" cache-period="31556926"/>
    <mvc:resources mapping="/html/images/**" location="/WEB-INF/temp/" cache-period="31556926"/>
    <mvc:resources mapping="/jsp/**" location="/WEB-INF/jsp/" cache-period="31556926"/>
    <mvc:resources mapping="/index/**" location="/WEB-INF/index/" cache-period="31556926"/>
    <mvc:resources mapping="/html/**" location="/WEB-INF/views/" cache-period="31556926"/>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <mvc:interceptors>
        <!-- <mvc:interceptor>
            <mvc:mapping path="/download/**" />
            <mvc:mapping path="/upload/**" />
            <bean class="com.xxxx.interceptor.AuthInterceptor" />
        </mvc:interceptor> -->
        <!-- 检查用户权限，对于部分不需要权限的路径进行排除 -->
        <mvc:interceptor>
            <!-- 先匹配所有路径，然后排除不需要检查的路径 -->
            <mvc:mapping path="/**"/>
            <!-- 与登录相关的请求 -->
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/login"/>
            <!-- 以下是静态资源 -->
            <mvc:exclude-mapping path="/lib/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <mvc:exclude-mapping path="/temp/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/My97DatePicker/**"/>
            <mvc:exclude-mapping path="/ueditorFile/**"/>
            <!-- 客户端文件上传下载，不使用该校验 -->
            <!-- <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/upload/**" /> -->
            <!-- 用户是否已经登录的检查 -->
            <bean id="loginInterceptor" class="com.xunyou.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <bean class="com.xunyou.exception.CustomExceptionResolver"></bean>
    <bean class=" org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          p:ignoreDefaultModelOnRedirect="true">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>   <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
    </bean>
    <!-- freemarker的配置 -->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd</prop><!-- 时间格式化 -->
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
            </props>
        </property>
    </bean>

    <!-- 视图配置 在list中按照配置的先后顺序 -->
    <bean
            class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
        <!--<property name="defaultContentType" value="text/html"/>-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--<entry key="json" value="application/json"/>-->
                <!--<entry key="xls" value="application/vnd.ms-excel"/>-->
                <!--<entry key="xlsx"-->
                       <!--value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>-->
                <!--<entry key="pdf" value="application/pdf"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="favorParameter" value="false"/>-->
        <property name="viewResolvers">
            <list>
                <!-- 配置freeMarker视图解析器 -->
                <bean
                        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                    <property name="cache" value="true"/>
                    <property name="prefix" value=""/><!-- 上面已经配了，这里就不用配啦 -->
                    <property name="suffix" value=".html"/>
                    <property name="contentType" value="text/html;charset=UTF-8"/>
                    <property name="viewClass"
                              value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
                    <property name="allowSessionOverride" value="true"/>
                    <property name="allowRequestOverride" value="true"/>
                    <property name="exposeSpringMacroHelpers" value="false"/>
                    <property name="exposeRequestAttributes" value="true"/>
                    <property name="exposeSessionAttributes" value="true"/>
                    <property name="requestContextAttribute" value="request"/>
                </bean>
                <bean
                        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass"
                              value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/views/"/>
                    <property name="suffix" value=".html"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

</beans>