<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunyou.mapper.OrderHotelRoomEntityMapper">
  <resultMap id="BaseResultMap" type="com.xunyou.model.OrderHotelRoomEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_hote_no" jdbcType="VARCHAR" property="orderHoteNo" />
    <result column="room_id" jdbcType="CHAR" property="roomId" />
    <result column="room_no" jdbcType="CHAR" property="roomNo" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_hote_no, room_id, room_no, price, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xy_order_hotel_room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xy_order_hotel_room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xunyou.model.OrderHotelRoomEntity">
    insert into xy_order_hotel_room (id, order_hote_no, room_id, 
      room_no, price, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{orderHoteNo,jdbcType=VARCHAR}, #{roomId,jdbcType=CHAR}, 
      #{roomNo,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xunyou.model.OrderHotelRoomEntity">
    insert into xy_order_hotel_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderHoteNo != null">
        order_hote_no,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomNo != null">
        room_no,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderHoteNo != null">
        #{orderHoteNo,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=CHAR},
      </if>
      <if test="roomNo != null">
        #{roomNo,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunyou.model.OrderHotelRoomEntity">
    update xy_order_hotel_room
    <set>
      <if test="orderHoteNo != null">
        order_hote_no = #{orderHoteNo,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=CHAR},
      </if>
      <if test="roomNo != null">
        room_no = #{roomNo,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunyou.model.OrderHotelRoomEntity">
    update xy_order_hotel_room
    set order_hote_no = #{orderHoteNo,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=CHAR},
      room_no = #{roomNo,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>